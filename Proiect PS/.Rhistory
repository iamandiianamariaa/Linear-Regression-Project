1
1
1+1
data("quakes")
force(quakes)
View(quakes)
head(quakes)
summary(quakes)
mean(quakes)
mean(lat)
mean(quakes$mag)
mean(quakes$lat)
mean(quakes$long)
mean(quakes$depth)
mean(quakes$mag)
mean(quakes$stations)
var(quakes$lat)
var(quakes$long)
var(quakes$depth)
var(quakes$mag)
var(quakes$stations)
help(quartile)
??quartile
??quantile
help("quantile")
quantile(lat)
quantile(quakes$lat)
boxplot(quakes)
boxplot(quakes$lat)
boxplot(quakes$long)
boxplot(quakes$depth)
boxplot(quakes$mag)
boxplot(quakes$stations)
attach(quakes)
boxplot(quakes$stations)
boxplot(quakes$mag)
plot(mag, stations,
ylab = "stations",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
plot(mag, stations,
ylab = ""# of Stations Reporting"",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
library(e1071)
par(mfrow=c(1, 2))  # divide graph area in 2 columns
plot(density(quakes$mag), main="Density Plot: Speed", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes), 2)))
library(e1071)
install.packages(e1071)
install.packages('e1071', dependencies=TRUE)
library(e1071)
par(mfrow=c(1, 2))  # divide graph area in 2 columns
plot(density(quakes$mag), main="Density Plot: Speed", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes), 2)))
polygon(density(quakes$mag), col="red")
plot(density(quakes$stations), main="Density Plot: Distance", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes$stations), 2)))
cor(quakes$mag, quakes$stations)
Quake.mod <- lm(stations ~ mag)
linearmod <- lm(stations ~ mag)
View(Quake.mod)
View(Quake.mod)
print(linearmod)
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
library(e1071)
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
#library(e1071)
#par(mfrow=c(1, 2))  # divide graph area in 2 columns
plot(density(quakes$mag), main="Density Plot: Magnitude", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes), 2)))
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
par(mfrow=c(1, 1))
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
cor(quakes$mag, quakes$stations)
linearmod <- lm(stations ~ mag)
print(linearmod)
abline(-180.42, 46.28, col="red", lwd = 2)
summary(linearmod)
summary(linearmod)
AIC(linearMod)
AIC(linearmod)
BIC(linearmod)
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
data("quakes")
attach(quakes)
head(quakes)
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
cor(quakes$mag, quakes$stations)
linearmod <- lm(stations ~ mag)
print(linearmod)
abline(-180.42, 46.28, col="red", lwd = 2)
summary(linearmod)
AIC(linearmod)
BIC(linearmod)
cor(quakes$long,quakes$mag)
cor(quakes$depth,quakes$mag)
myLR <- lm(stations ~ mag + depth)
myLR
myLR <- lm(stations ~ mag + depth)
print(myLR)
summary(myLR)
AIC(myLR)
BIC(myLR)
abline(-180.42, 46.28, col="red")
abline(-180.42, 46.28, col="red")
#library(e1071)
par(mfrow=c(1, 2))  # divide graph area in 2 columns
plot(density(quakes$mag), main="Density Plot: Magnitude", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes), 2)))
polygon(density(quakes$mag), col="red")
plot(density(quakes$stations), main="Density Plot: Stations", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes$stations), 2)))
plot(density(quakes$stations), main="Density Plot: Stations", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes$stations), 2)))
polygon(density(quakes$mag), col="red")
plot(density(quakes$stations), main="Density Plot: Stations", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes$stations), 2)))
cor(quakes$mag, quakes$stations)
linearmod <- lm(stations ~ mag)
print(linearmod)
abline(-180.42, 46.28, col="red",lwd=2)
plot(density(quakes$mag), main="Density Plot: Magnitude", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(quakes), 2)))
polygon(density(quakes$mag), col="red")
cor(quakes$mag, quakes$stations)
linearmod <- lm(stations ~ mag)
print(linearmod)
abline(-180.42, 46.28, col="red",lwd=2)
summary(linearmod)
myLR <- lm(stations ~ mag + depth)
print(myLR)
summary(myLR)
linearmod <- lm(stations ~ mag)
print(linearmod)
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
#library(e1071)
par(mfrow=c(1, 1))  # divide graph area in 2 columns
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
abline(-180.42, 46.28, col="red",lwd=2)
plot(density(quakes$mag), main="Density Plot: Magnitude", ylab="Frequency")
polygon(density(quakes$mag), col="red")
plot(density(quakes$stations), main="Density Plot: Stations", ylab="Frequency")
polygon(density(quakes$mag), col="red")
plot(density(quakes$mag), main="Density Plot: Magnitude", ylab="Frequency")
polygon(density(quakes$mag), col="red")
polygon(density(quakes$mag, col="blue"))
polygon(density(quakes$mag), col="blue"))
polygon(density(quakes$mag), col="blue")
plot(density(quakes$stations), main="Density Plot: Stations", ylab="Frequency")
polygon(density(quakes$stations), col="blue")
summary(myLR)
AIC(myLR)
BIC(myLR)
plot(myLR)
View(quakes)
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
dBenf(x <- c(0:10, NA, NaN, -Inf, Inf))
set.seed(100)
trainingRowIndex <- sample(1:nrow(quakes), 0.8*nrow(quakes))  # row indices for training data
trainingData <- quakes[trainingRowIndex, ]  # model training data
testData  <- quakes[-trainingRowIndex, ]   #test data
print(testData)
lmMod <- lm(dist ~ speed, data=trainingData)  # build the model
lmMod <- lm(stations ~ mag, data=trainingData)  # build the model
distPred <- predict(lmMod, testData)  # predict distance
summary(lmMod)
AIC(lmMod)
BIC(lmMod)
mean(lat)
attach(quakes)
mean(lat)
mean(stations)
cor(mag, stations)
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting"
data=trainingData)
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting",
data=trainingData)
plot(trainingDta$mag, trainingData$stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
plot(trainingData$mag, trainingData$stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
plot(density(trainingData$mag), main="Density Plot: Magnitude", ylab="Frequency")
polygon(density(trainingData$mag), col="red")
plot(density(trainingData$stations), main="Density Plot: Stations", ylab="Frequency")
polygon(density(trainingData$stations), col="blue")
cor(trainingData$mag, trainingData$stations)
cor(mag, stations) #corelatia, variabila raspuns este nr de statii
#pe training data
print(lmMod)                #prezicem nr de statii care inregistreaza cutremurul
plot(trainingData$mag, trainingData$stations,     #plot pentru training data
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
#in functie de magnitudinea lui
abline(-179.28, 46.03, col="red",lwd=2)    #regression line
summary(linearmod)
summary(lmMod)
#pe training data
print(lmMod)                #prezicem nr de statii care inregistreaza cutremurul
myLR <- lm(stations ~ mag + depth,data=trainingData)    #construim modelul pentru regresia multipla
print(myLR)       #prezicem nr de statii care inregistreaza cutremurul
lmMultip <- lm(stations ~ mag + depth,data=trainingData)    #construim modelul pentru regresia multipla
print(lmMultip)       #prezicem nr de statii care inregistreaza cutremurul
summary(lmMultip)     #dupa magnitudine si adancimea cutremurului
AIC(lmMultip)         #pentru regresia multipla
BIC(lmMultip)
AIC(lmMod)
BIC(lmMod)
Pred <- predict(lmMod, testData)  # prezicem nr de statii
print(Pred)
actuals_preds <- data.frame(cbind(actuals=testData$stations, predicteds=Pred))  # make actuals_predicteds dataframe.
correlation_accuracy <- cor(actuals_preds)
print(correlation_accuracy)
head(actuals_preds)
print(correlation_accuracy)
actuals_preds_multip <- data.frame(cbind(actuals=testData$stations, predicteds=PredMultip))  # make actuals_predicteds dataframe.
PredMultip <- predict(lmMod, testData)  # prezicem nr de statii
AIC(lmMultip)         #pentru regresia multipla
BIC(lmMultip)
actuals_preds_multip <- data.frame(cbind(actuals=testData$stations, predicteds=PredMultip))  # make actuals_predicteds dataframe.
correlation_accuracy <- cor(actuals_preds_multip)    #prediction accuracy
print(correlation_accuracy)
head(actuals_preds_multip)
PredMultip <- predict(lmMultip, testData)  # prezicem nr de statii
AIC(lmMultip)         #pentru regresia multipla
BIC(lmMultip)
actuals_preds_multip <- data.frame(cbind(actuals=testData$stations, predicteds=PredMultip))  # make actuals_predicteds dataframe.
correlation_accuracy <- cor(actuals_preds_multip)    #prediction accuracy
print(correlation_accuracy)
head(actuals_preds_multip)
dcauchy(-1:4)
x<-seq(-10,10,by=0.1)
plot(x, dnorm(x),type="l")
plot(x, dcauchy(x),col="red")
plot(x, dnorm(x),type="l")
plot(x, dcauchy(x),col="red")
plot(x, dcauchy(x),type="l")
plot(x, dnorm(x),type="l")
plot(x, dcauchy(x),type="l")
plot(x, dnorm(x)
)
plot(x, dnorm(x),type="l")
plot(x, dcauchy(x),type="l")
par(mfrow=c(1, 2))
plot(x, dnorm(x),type="l")
plot(x, dcauchy(x),type="l")
plot(x, pcauchy(x, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE),type="l")        #functia de repartitie
plot(x, dcauchy(x, location = 0, scale = 1, log = FALSE),type="l")      #functia densitate de probabilitate
plot(x, pcauchy(x, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE),type="l")        #functia de repartitie
plot(x, dcauchy(x, location = 0, scale = 1, log = FALSE),type="l")      #functia densitate de probabilitate
plot(x, pcauchy(x, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE),type="l")        #functia de repartitie
#Repartitia Cauchy
x<-seq(0,1,by=0.1)
par(mfrow=c(1, 2))
plot(x, pcauchy(x, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE),type="l")        #functia de repartitie
plot(x, dcauchy(x, location = 0, scale = 1, log = FALSE),type="l")      #functia densitate de probabilitate
#Repartitia Cauchy
x<-seq(-10,10,by=0.1)
par(mfrow=c(1, 2))
plot(x, pcauchy(x, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE),type="l")        #functia de repartitie
plot(x, dcauchy(x, location = 0, scale = 1, log = FALSE),type="l")      #functia densitate de probabilitate
mean(lat)
data("quakes")
attach(quakes)
head(quakes)
#Medie pentru variabilele latitudine, longitudine, adancime si nr de statii care au inregistrat cutremurul
summary(quakes)
mean(lat)
mean(long)
mean(depth)
mean(mag)
mean(stations)
data("quakes")
force(quakes)
#Varianta pentru variabile
var(lat)
var(long)
var(depth)
var(mag)
#Medie pentru variabilele latitudine, longitudine, adancime si nr de statii care au inregistrat cutremurul
summary(quakes)
head(quakes)
#Medie pentru variabilele latitudine, longitudine, adancime si nr de statii care au inregistrat cutremurul
summary(quakes)
summary(linearmod)
#plot pentru intregul set de date
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
data("quakes")
attach(quakes)
head(quakes)
#plot pentru intregul set de date
plot(mag, stations,
ylab = "# of Stations Reporting",
xlab = "Magnitude",
main = "Fiji Earthquakes Magnitude and Reporting")
head(quakes)
data("quakes")
force(quakes)
#Varianta pentru variabile
var(lat)
var(long)
var(depth)
var(mag)
#boxplot
boxplot(lat)
boxplot(long)
boxplot(depth)
boxplot(mag)
boxplot(stations)
summary(lmMultip)     #dupa magnitudine si adancimea cutremurului
PredMultip <- predict(lmMultip, testData)  # prezicem nr de statii
print(correlation_accuracy)
cor(trainingData$mag, trainingData$stations)
correlation_accuracy <- cor(actuals_preds)    #prediction accuracy
print(correlation_accuracy)
print(correlation_accuracy)
correlation_accuracy <- cor(actuals_preds_multip)    #prediction accuracy
print(correlation_accuracy)
d=read.table("/Users/anamaria/Downloads/F1.dat")
d=read.table("/Users/anamaria/Downloads/F2.dat", header=T)
d
attach(d)
y
medie<-mean(y)
hist(y)
t<-seq(14,32,0.001)
lines(t,dnorm(t,23.25,1),col="blue")
hist(y,col="magenta")
t<-seq(14,32,0.001)
lines(t,dnorm(t,23.25,1),col="blue")
hist(y,col="magenta",freq=F)
t<-seq(14,32,0.001)
lines(t,dnorm(t,23.25,1),col="blue")
lines(t,dnorm(t,23.25,4),col="blue")
t<-seq(14,32,0.001)
lines(t,dnorm(t,23.25,4),col="blue")
hist(y,col="magenta",freq=F)
t<-seq(14,32,0.001)
lines(t,dnorm(t,23.25,4),col="blue")
q1<-quantile(y,1/4)
q3<-quantile(3/4)
q1<-quantile(y,1/4)
q3<-quantile(y,3/4)
q2<-quantile(y,2/4)
mediana<-median(y)
ceva<-quantile(y,23/47)
ceva
toateq<-quantile(y,c(1/4,2/4,3/4))
toateq
boxplot(y)
y1<-c(y,50)
boxplot(y1)
maxim<-q3+1.5*(q3-q1)
y1<-c(y,50,2)
boxplot(y1)
q1<-quantile(y1,1/4)
q3<-quantile(y1,3/4)
maxim<-q3+1.5*(q3-q1)
d1=read.table("/Users/anamaria/Downloads/F3.dat", header=T)
attach(d1)
d1
summary(y)
